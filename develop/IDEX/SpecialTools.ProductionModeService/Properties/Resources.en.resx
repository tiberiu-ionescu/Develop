<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ACTION_INFO_ACTIVATED" xml:space="preserve">
    <value>Production Mode activation process finished!</value>
  </data>
  <data name="ACTION_INFO_ACTIVATING" xml:space="preserve">
    <value>Activating Production Mode!</value>
  </data>
  <data name="ACTION_INFO_DEACTIVATED" xml:space="preserve">
    <value>Production Mode deactivation process finished!</value>
  </data>
  <data name="ACTION_INFO_DEACTIVATING" xml:space="preserve">
    <value>Deactivating Production Mode!</value>
  </data>
  <data name="ACTION_INFO_ECU_FAIL" xml:space="preserve">
    <value>{0} might not be set correctly. Reason: {1}</value>
    <comment>{0} Localized Name of ECU;    {1} Error Reason</comment>
  </data>
  <data name="ACTION_INFO_ECU_IN_STATE" xml:space="preserve">
    <value>{0} is now in the state {1}</value>
    <comment>{0} Localized Name of ECU;    {1} State of ECU</comment>
  </data>
  <data name="ACTION_INFO_ECU_MODIFICATION_STARTED" xml:space="preserve">
    <value>Production Mode of {0} will be set to {1}...</value>
    <comment>{0} Localized Name of ECU;    {1} Target State of ECU</comment>
  </data>
  <data name="ACTION_INFO_READING" xml:space="preserve">
    <value>Reading Production Mode status!</value>
  </data>
  <data name="ACTION_INFO_READING_COMPLETE" xml:space="preserve">
    <value>Production Mode status was read</value>
  </data>
  <data name="ACTION_INFO_SETTING_FOR_X_ECUS" xml:space="preserve">
    <value>Setting Production Mode for {0} ECUs</value>
    <comment>{0} Count of ECUs</comment>
  </data>
  <data name="ACTION_INFO_WAITING_FOR_MASTER" xml:space="preserve">
    <value>{0} is now configured to wait for the production mode master signal</value>
    <comment>{0} Localized Name of ECU</comment>
  </data>
  <data name="ACTIVATE" xml:space="preserve">
    <value>Activate</value>
  </data>
  <data name="ACTIVATING" xml:space="preserve">
    <value>Activating</value>
  </data>
  <data name="CHECK" xml:space="preserve">
    <value>Check</value>
  </data>
  <data name="CHECKING" xml:space="preserve">
    <value>Checking</value>
  </data>
  <data name="COULD_NOT_CONNECT_TO_GATEWAY" xml:space="preserve">
    <value>Could not connect to Gateway</value>
  </data>
  <data name="DEACTIVATE" xml:space="preserve">
    <value>Deactivate</value>
  </data>
  <data name="DEACTIVATING" xml:space="preserve">
    <value>Deactivating</value>
  </data>
  <data name="LOCALIZED_GROUP_NAME" xml:space="preserve">
    <value>Main Group</value>
  </data>
  <data name="LOCALIZED_TOOL_DESCRIPTION" xml:space="preserve">
    <value>Tool for reading and setting the Production Mode</value>
  </data>
  <data name="LOCALIZED_TOOL_NAME" xml:space="preserve">
    <value>Production Mode</value>
  </data>
  <data name="NO_PROJECT" xml:space="preserve">
    <value>Project is not set!</value>
  </data>
  <data name="NO_PROJECT_ERROR_MSG" xml:space="preserve">
    <value>No Project</value>
  </data>
  <data name="PRODUCTION_MODE_NOT_SUPPORTED" xml:space="preserve">
    <value>No P-Mode ECU available</value>
  </data>
  <data name="RESULTS" xml:space="preserve">
    <value>Result Log</value>
  </data>
  <data name="RESULT_ACCESS_DENIED" xml:space="preserve">
    <value>Access Denied</value>
  </data>
  <data name="RESULT_ADAPTATION_MISSING" xml:space="preserve">
    <value>Adaptation Missing</value>
  </data>
  <data name="RESULT_ADAPTATION_WRITE_FAILED" xml:space="preserve">
    <value>Adaptation write failed</value>
  </data>
  <data name="RESULT_ADAPTATION_WRITE_NRC" xml:space="preserve">
    <value>Adaptation Write NRC</value>
  </data>
  <data name="RESULT_CONNECTION_FAILED" xml:space="preserve">
    <value>Connection failed</value>
  </data>
  <data name="RESULT_CUSTOM_HEX_SERVICE_DISPATCH_FAILED" xml:space="preserve">
    <value>Custom HEX Service dispatch failed</value>
  </data>
  <data name="RESULT_CUSTOM_HEX_SERVICE_NRC" xml:space="preserve">
    <value>Custom HEX Service NRC</value>
  </data>
  <data name="RESULT_DIAGNOSTIC_TASK_CREATION_FAILED" xml:space="preserve">
    <value>Diagnostic task creation failed</value>
  </data>
  <data name="RESULT_ERROR" xml:space="preserve">
    <value>ERROR</value>
  </data>
  <data name="RESULT_INVALID_PIN" xml:space="preserve">
    <value>Invalid PIN</value>
  </data>
  <data name="RESULT_MEASUREMENT_BLOCK_MISSING" xml:space="preserve">
    <value>Measurement Block Missing</value>
  </data>
  <data name="RESULT_NO_ERROR" xml:space="preserve">
    <value>No Error</value>
  </data>
  <data name="RESULT_PMODE_MASTER_NOT_SET" xml:space="preserve">
    <value>PMode Master Not Set</value>
  </data>
  <data name="RESULT_RESTART_FAILED" xml:space="preserve">
    <value>Restart Failed</value>
  </data>
  <data name="RESULT_SESSION_CHANGE_FAILED" xml:space="preserve">
    <value>Session change failed</value>
  </data>
  <data name="RESULT_STATE_DID_NOT_CHANGE" xml:space="preserve">
    <value>State did not change</value>
  </data>
  <data name="RESULT_SUCCESS" xml:space="preserve">
    <value>OK</value>
  </data>
  <data name="RESULT_UNKNOWN_ERROR" xml:space="preserve">
    <value>Unknown Error</value>
  </data>
  <data name="STATE_ACTIVE" xml:space="preserve">
    <value>Active</value>
  </data>
  <data name="STATE_INACTIVE" xml:space="preserve">
    <value>Inactive</value>
  </data>
  <data name="STATE_UNKNOWN" xml:space="preserve">
    <value>Unknown</value>
  </data>
  <data name="STATE_WAITING_FOR_MASTER" xml:space="preserve">
    <value>Waiting for master switch...</value>
  </data>
  <data name="TOOL_NAME" xml:space="preserve">
    <value>ProductionModeService</value>
  </data>
</root>